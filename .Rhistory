library(datasets)
data(iris)
summary(iris)
head(iris)
split(iris$setosa)
split(iris,iris$Species)
sapply(split(iris,iris$Species),mean)
sapply(split(iris$Sepal.Length,iris$Species),mean)
data(mtcars)
mean(mtcars$mpg, mtcars$cyl)
apply(mtcars, 2, mean)
with(mtcars, tapply(mpg, cyl, mean))
lapply(mtcars, mean)
setwd("~/DataScientist/repo/RepData_PeerAssessment1")
getwd()
setwd("C:/Users/Ákos/Documents/DataScientist/repo/RepData_PeerAssessment1")
data <- read.csv("activity.csv",header=TRUE,sep=",",quote='"')
head(data)
str(data)
data$date <- as.Date(data$date,format="%Y-%m-%d")
str(data)
head(data)
tail(data)
mean(data$steps~data$date)
table(data$steps~data$date)
table(data$steps,data$date)
head(table(data$steps,data$date))
head(table(data$date,data$steps))
aggregate(data$steps, by=list(data$date), FUN=mean)
sum(is.na(data$date))
sum(is.na(data$interval))
sum(is.na(data$steps))
data2 <- data[!is.na(data$steps),]
aggregate(data2$steps, by=list(data2$date), FUN=mean)
aggregate(data2$steps, by=list(data2$date), FUN=median)
hist(aggregate(data2$steps, by=list(data2$date), FUN=mean))
hist(aggregate(data2$steps, by=list(data2$date), FUN=mean)$x)
hist(aggregate(data2$steps, by=list(data2$date), FUN=sum)$x)
mean(aggregate(data2$steps, by=list(data2$date), FUN=sum)$x)
median(aggregate(data2$steps, by=list(data2$date), FUN=sum)$x)
aggregate(data2$steps, by=list(data2$date), FUN=sum)
hist(aggregate(data2$steps, by=list(data2$interval), FUN=mean)$x)
aggregate(data2$steps, by=list(data2$interval), FUN=mean)
daily <- aggregate(data2$steps, by=list(data2$interval), FUN=mean);
plot(daily$Group.1,daily$x,type="l")
which.max(daily[,2])
daily[which.max(daily[,2])]
daily[which.max(daily[,2]),]
daily[which.max(daily[,2]),]$Group.1
sum(is.na(data$steps))
data3 <- data2
sum(is.na(data3$steps))
data3 <- data1
data3 <- data
sum(is.na(data3$steps))
apply(data3, 1, function (x) ifelse( is.na(x[2]), tapply(data3$steps, data3$interval, mean, na.rm=TRUE)[x[1]] ,x[2] ))
sum(is.na(data3$steps))
apply(data3, 1, function (x) ifelse( is.na(x[1]), tapply(data3$steps, data3$interval, mean, na.rm=TRUE)[x[1]] ,x[2] ))
sum(is.na(data3$steps))
data3 <- data
sum(is.na(data3$steps))
head(data3)
data3[is.na(data3$steps), "steps"] <- tapply(data3$steps, data3$interval, mean,  na.rm=TRUE)[ data3[is.na(df$steps),"group"] ]
data3[is.na(data3$steps), "steps"] <- tapply(data3$steps, data3$interval, mean,  na.rm=TRUE)[ data3[is.na(data3$steps),"group"] ]
data3[is.na(data3$steps), "steps"] <- tapply(data3$steps, data3$interval, mean,  na.rm=TRUE)[ data3[is.na(data3$steps),"interval"] ]
data3[is.na(data3$steps), "steps"] <- tapply(data3$steps, data3$interval, mean,  na.rm=TRUE)[ data3[is.na(data3$steps),"steps"] ]
sum(is.na(data3$steps))
data3
data3[is.na(data3$steps),]
apply(data3, 1, function (x) ifelse( is.na(x[1]), x[1] <- daily[dail))
daily$Group.1
apply(data3, 1, function (x) ifelse( is.na(x[1]), x[1] <- daily[dail$Group.1==x[3],2]))
apply(data3, 1, function (x) ifelse( is.na(x[1]), x[1] <- daily[daily$Group.1==x[3],2]))
apply(data3, 1, function (x) ifelse( is.na(x[1]), x[1] <- 0))
apply(data3, 1, function (x) ifelse( is.na(x[1]), x[1] <- 0, x[1]<-x[1]))
sum(is.na(data3$steps))
data4 <- apply(data3, 1, function (x) ifelse( is.na(x[1]), x[1] <- 0, x[1]<-x[1]))
sum(is.na(data4$steps))
data4 <- apply(data3, 1, function (x) ifelse( is.na(x[1]), x[1] <- daily[daily$Group.1 == x[3],2], x[1]<-x[1]))
daily[daily$Group.1 == 453,2]
daily[daily$Group.1 == 1453,2]
daily[daily$Group.1 == 1553,2]
daily[daily[1] == 1553 ,2]
head(daily)
daily[daily[1] == 1555 ,2]
data4 <- apply(data3, 1, function (x) ifelse( is.na(x[1]), x[1] <- daily[daily[1] == x[3],2], x[1]<-x[1]))
data3[3]
daily[daily[1] == 1553 ,2]
daily[daily[1] == 1555 ,2]
daily[daily[1] == 10555 ,2]
daily[daily[1] == 2555 ,2]
daily[daily[1] == 555 ,2]
data4 <- apply(data3, 1, function (x) ifelse( is.na(x[1]), x[1] <- daily[daily[1] == x[3],2], x[1]<-x[1]))
data4 <- apply(data3, 1, function (x) ifelse( is.na(x[1]),  daily[daily[1] == x[3],2], x[1]))
data4
data4 <- apply(data3, 1, function (x) ifelse( is.na(x[1]),  daily[daily[1] == x[3],2], x[1]))
sum(is.na(data4))
sum(is.na(daily$x))
sum(is.na(daily$Group.1))
data4 <- apply(data3, 2, function (x) ifelse( is.na(x[1]),  daily[daily[1] == x[3],2], x[1]))
sum(is.na(data4))
data4
data4 <- apply(data3, 1, function (x) ifelse( is.na(x[1]),  daily[daily[1] == x[3],2], x[3]))
sum(is.na(data4))
sum(is.na(data3$steps))
data4 <- lapply(data3, 1, function (x) ifelse( is.na(x[1]),  daily[daily[1] == x[3],2], x[3]))
data4 <- lapply(data3, function (x) ifelse( is.na(x[1]),  daily[daily[1] == x[3],2], x[3]))
sum(is.na(data4))
data4
data4 <- lapply(data3, function (x) ifelse( is.na(x[1]),  daily[daily[1] == x[3],2], x[1]))
sum(is.na(data4))
data4 <- lapply(data3, function (x) ifelse( is.na(x[1]),  daily[daily[1] == x[3],2], x[1]))
data4
data4 <- apply(data3, function (x) ifelse( is.na(x[1]),  daily[daily[1] == x[3],2], x[1]))
data4 <- apply(data3,1, function (x) ifelse( is.na(x[1]),  daily[daily[1] == x[3],2], x[1]))
data4
data3[9910,]
ifelse( is.na(data3[9910,1]),  daily[daily[1] == data3[9910,3],2], data3[9910,1])
ifelse( is.na(data3[9997,1]),  daily[daily[1] == data3[9997,3],2], data3[9997,1])
ifelse( is.na(data3[9910,1]),  daily[daily[1] == data3[9910,3],2], data3[9910,1])
data4 <- apply(data3,1, function (x) ifelse( is.na(x[1,1]),  daily[daily[1] == x[1,3],2], x[1,1]))
data4 <- apply(data3,1, function (x) ifelse( is.na(x[1]),  daily[daily[1] == x[3],2], x[1]))
sum(is.na(data4))
data4 <- apply(data3,1, function (x) ifelse( is.na(x[1]),  daily[daily[1] == x[3],2], x[3]))
sum(is.na(data4))
head(daily)
tail(daily)
288*5
daily <- aggregate(data2$steps, by=list(data2$interval), FUN=mean,);
daily <- aggregate(data2$steps, by=list(data2$interval), FUN=mean);
daily <- aggregate(data$steps, by=list(data$interval), FUN=mean);
hist(data$interval)
unique(data$interval)
data4 <- apply(data3,1, function (x) ifelse( is.na(x[1]),  daily[daily[1] == x[3],2], x[3]))
length(data3)
nrow(data3)
weekdays(data3[1,2])
weekdays(data3[10,2])
weekdays(data3[100,2])
weekdays(data3[1000,2])
as.numeric(weekdays(data3[1000,2]))
weekdays(data3[1000,2])
weekdays(data3[1000,2])
as.POSIXlt(data3[1000,2])$wday
as.POSIXlt(data3[10,2])$wday
data3$weekday <- as.POSIXlt(data3[,2])$wday < 6
head(data3)
data3[1000:1010,]
data3[1500:15ű10,]
data3[1500:1510,]
par(mfrow=2)
par(mfrow=(2,1))
par(mfrow=c(1,2))
hist(data3$steps)
hist(data3$steps)
par(mfrow=c(2,1))
hist(data3$steps)
hist(data3$steps)
plot(weekendly$Group.1,daily$x,type="l")
